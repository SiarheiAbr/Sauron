@using Sauron.Common.Static
@using Sauron.Services.Processing
@model Sauron.ViewModels.TasksIndexViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Available Tasks</h2>

<table class="table">
	<thead>
	<tr>
		<th scope="col">Name</th>
		<th scope="col">Link</th>
		<th scope="col">Submit Home&nbsp;Work</th>
	</tr>
	</thead>
	<tbody>
		@foreach (var task in Model.Tasks)
		{
			<tr>
				<td>
					<p>@task.Name</p>
				</td>
				<td><a target ="_blank" href="@task.GitHubUrl">@task.Name</a></td>
				@if (task.AttemptsCount >= ProcessingService.MaxBuildAttemptsCount && !User.IsInRole(UserRoles.Admin))
				{
					<td>
						"You can't submit this home work. Maximum attempts reached."
					</td>
				}
				else
				{
					<td>
						@{
							Html.RenderPartial("_RepositoriesSelector", Model.Repositories, new ViewDataDictionary { { "taskId", task.Id } });
						}
					</td>
				}
			</tr>
		}
	</tbody>
</table>
